–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –û–ë–ù–û–í–õ–ï–ù–ò–Æ handlers.py
====================================

1. –í —Ñ—É–Ω–∫—Ü–∏–∏ on_callback –Ω–∞–π–¥–∏—Ç–µ –±–ª–æ–∫:
   elif data == "gen_thought_cover":
   
   –ò –∑–∞–º–µ–Ω–∏—Ç–µ –≤–µ—Å—å –±–ª–æ–∫ –¥–æ return –Ω–∞:
   -----------------
   elif data == "gen_thought_cover":
       await gen_thought_cover_improved(query, context)
       return
   -----------------

2. –í —Ñ—É–Ω–∫—Ü–∏–∏ on_callback –Ω–∞–π–¥–∏—Ç–µ –±–ª–æ–∫:
   elif data == "publish_thought":
   
   –ò –∑–∞–º–µ–Ω–∏—Ç–µ –≤–µ—Å—å –±–ª–æ–∫ –¥–æ return –Ω–∞:
   -----------------
   elif data == "publish_thought":
       await publish_thought_improved(query, context)
       return
   -----------------

3. –í —Ñ—É–Ω–∫—Ü–∏–∏ on_callback –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π:
   elif data == "noop":
   
   –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:
   -----------------
   elif data == "edit_thought_text":
       await edit_thought_text(update, context)
       return
   
   elif data == "change_thought_photo":
       await change_thought_photo(update, context)
       return
   
   elif data.startswith("edit_post_text:"):
       post_id = data.split(":")[1]
       await edit_post_text_handler(query, context, post_id)
       return
   
   elif data.startswith("change_post_photo:"):
       post_id = data.split(":")[1]
       state["changing_post_photo"] = post_id
       save_state()
       
       await query.edit_message_text(
           "üì∑ <b>–ó–∞–º–µ–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å—Ç–∞</b>\n\n"
           "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n\n"
           "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã",
           parse_mode=ParseMode.HTML
       )
       return
   -----------------

4. –í —Ñ—É–Ω–∫—Ü–∏–∏ handle_text_message –ø–æ—Å–ª–µ –±–ª–æ–∫–∞:
   if state.get("waiting_for_channel"):
   
   –î–æ–±–∞–≤—å—Ç–µ:
   -----------------
   elif state.get("editing_thought"):
       new_text = text.strip()
       thought_data = state.get("current_thought")
       
       if thought_data:
           thought_data["text"] = new_text
           state["current_thought"] = thought_data
           state["editing_thought"] = False
           save_state()
           
           keyboard = InlineKeyboardMarkup([
               [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_thought")],
               [
                   InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="edit_thought_text"),
                   InlineKeyboardButton("üîÑ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç", callback_data="regen_thought")
               ],
               [
                   InlineKeyboardButton("üé® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É", callback_data="gen_thought_cover"),
                   InlineKeyboardButton("üì∑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="change_thought_photo")
               ],
               [
                   InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_thought"),
                   InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="cmd_back_main")
               ]
           ])
           
           await update.message.reply_text(
               f"‚úÖ –¢–µ–∫—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n"
               f"üí≠ <b>–ü–æ—Å—Ç-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ:</b>\n\n{new_text}",
               parse_mode=ParseMode.HTML,
               reply_markup=keyboard
           )
   
   elif state.get("editing_post"):
       post_id = state["editing_post"]
       record = state["pending"].get(post_id)
       
       if record:
           record["description"] = text.strip()
           state["pending"][post_id] = record
           state["editing_post"] = None
           save_state()
           
           await update.message.reply_text("‚úÖ –¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω!")
           await send_for_moderation(context.bot, record)
   -----------------

5. –í —Ñ—É–Ω–∫—Ü–∏–∏ handle_photo –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –ø–æ—Å–ª–µ try: –¥–æ–±–∞–≤—å—Ç–µ:
   -----------------
   if state.get("changing_thought_photo"):
       thought_data = state.get("current_thought")
       if thought_data:
           photo = update.message.photo[-1]
           thought_data["image_url"] = photo.file_id
           state["current_thought"] = thought_data
           state["changing_thought_photo"] = False
           save_state()
           
           keyboard = InlineKeyboardMarkup([
               [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="publish_thought")],
               [
                   InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="edit_thought_text"),
                   InlineKeyboardButton("üîÑ –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç", callback_data="regen_thought")
               ],
               [
                   InlineKeyboardButton("üé® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É", callback_data="gen_thought_cover"),
                   InlineKeyboardButton("üì∑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="change_thought_photo")
               ],
               [
                   InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_thought"),
                   InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="cmd_back_main")
               ]
           ])
           
           await update.message.reply_text(
               f"‚úÖ –§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n\n"
               f"üí≠ <b>–ü–æ—Å—Ç-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ:</b>\n\n{thought_data['text']}",
               parse_mode=ParseMode.HTML,
               reply_markup=keyboard
           )
       return
   
   if state.get("changing_post_photo"):
       post_id = state["changing_post_photo"]
       record = state["pending"].get(post_id)
       
       if record:
           photo = update.message.photo[-1]
           if post_id not in state["generated_images"]:
               state["generated_images"][post_id] = []
           
           state["generated_images"][post_id].insert(0, photo.file_id)
           state["changing_post_photo"] = None
           save_state()
           
           await update.message.reply_text("‚úÖ –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫ –ø–æ—Å—Ç—É!")
           await send_for_moderation(context.bot, record)
       return
   -----------------

6. –í —Ñ—É–Ω–∫—Ü–∏–∏ send_for_moderation –Ω–∞–π–¥–∏—Ç–µ keyboard_buttons –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞:
   -----------------
   keyboard_buttons = [
       [InlineKeyboardButton("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data=approve_data)],
       [
           InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data=f"edit_post_text:{record['id']}"),
           InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data=regenerate_data)
       ],
       [
           InlineKeyboardButton("üé® –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É", callback_data=gen_cover_data),
           InlineKeyboardButton("‚úèÔ∏è –°–≤–æ–π –ø—Ä–æ–º–ø—Ç", callback_data=custom_prompt_data)
       ],
       [
           InlineKeyboardButton("üì∑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ", callback_data=f"change_post_photo:{record['id']}"),
           InlineKeyboardButton("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª", callback_data=revert_img_data)
       ],
       [
           InlineKeyboardButton("‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"schedule:{record['id']}"),
           InlineKeyboardButton("‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=reject_data)
       ],
       [
           InlineKeyboardButton("‚óÄÔ∏è –ö –ø—Ä–µ–≤—å—é", callback_data=back_data),
           InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="cmd_back_main")
       ]
   ]
   -----------------

7. –í —Ñ—É–Ω–∫—Ü–∏–∏ cancel_command –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
   -----------------
   if state.get("editing_thought"):
       state["editing_thought"] = False
       cancelled.append("—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –º—ã—Å–ª–∏")
   
   if state.get("changing_thought_photo"):
       state["changing_thought_photo"] = False
       cancelled.append("–∑–∞–º–µ–Ω–∞ —Ñ–æ—Ç–æ –º—ã—Å–ª–∏")
   
   if state.get("editing_post"):
       state["editing_post"] = None
       cancelled.append("—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å—Ç–∞")
   
   if state.get("changing_post_photo"):
       state["changing_post_photo"] = None
       cancelled.append("–∑–∞–º–µ–Ω–∞ —Ñ–æ—Ç–æ –ø–æ—Å—Ç–∞")
   -----------------
