# run_all_bots.py - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

import asyncio
import json
import os
import random
from datetime import datetime, timedelta
from concurrent.futures import ProcessPoolExecutor
import subprocess
import sys

def load_bots_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–æ–≤"""
    with open('bots_config.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def run_bot_process(bot_index):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –±–æ—Ç–∞"""
    # –ó–∞–ø—É—Å–∫–∞–µ–º main.py —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –Ω–æ–º–µ—Ä–∞ –±–æ—Ç–∞
    subprocess.run([sys.executable, "main.py", "--bot", str(bot_index)])

async def run_all_bots_simultaneously():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ"""
    config = load_bots_config()
    bots = config['bots']
    
    print("=" * 60)
    print("üöÄ –ó–ê–ü–£–°–ö –í–°–ï–• –ë–û–¢–û–í –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û")
    print("=" * 60)
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –±–æ—Ç–æ–≤: {len(bots)}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤
    for i, bot in enumerate(bots, 1):
        print(f"{i}. {bot['name']} ({bot['phone']})")
    
    print("\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"- –ë–æ—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
    print(f"- –ö–∞–∂–¥—ã–π –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ")
    print(f"- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö")
    
    confirm = input("\n–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ—Ö –±–æ—Ç–æ–≤? (y/n): ")
    if confirm.lower() != 'y':
        print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        return
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
    processes = []
    
    for i in range(len(bots)):
        print(f"\nü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ #{i+1}: {bots[i]['name']}...")
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
        bot_script = f"""
import asyncio
import sys
sys.path.append('.')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ {i+1}
BOT_INDEX = {i}

from main import *

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = load_bots_config()
selected_bot = config['bots'][BOT_INDEX]

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
api_id = selected_bot['api_id']
api_hash = selected_bot['api_hash']
session_file = selected_bot['session_file']
proxy = tuple(selected_bot['proxy']) if selected_bot.get('proxy') else None

print(f"\\nü§ñ –ë–æ—Ç #{BOT_INDEX+1} ({selected_bot['name']}) –∑–∞–ø—É—â–µ–Ω")
print(f"üì± –°–µ—Å—Å–∏—è: {{session_file}}")
print(f"üåê –ü—Ä–æ–∫—Å–∏: {{proxy[1]}}:{{proxy[2]}}\" if proxy else \"–ë–µ–∑ –ø—Ä–æ–∫—Å–∏\")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
asyncio.run(enhanced_main())
"""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç
        script_file = f"bot_{i+1}_runner.py"
        with open(script_file, 'w', encoding='utf-8') as f:
            f.write(bot_script)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process = subprocess.Popen(
            [sys.executable, script_file],
            creationflags=subprocess.CREATE_NEW_CONSOLE if os.name == 'nt' else 0
        )
        processes.append((process, bots[i]['name'], script_file))
        
        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
        await asyncio.sleep(5)
    
    print(f"\n‚úÖ –ó–∞–ø—É—â–µ–Ω–æ –±–æ—Ç–æ–≤: {len(processes)}")
    print("\nüìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –±–æ—Ç–æ–≤\n")
    
    try:
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        while True:
            await asyncio.sleep(30)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            for i, (process, name, script_file) in enumerate(processes):
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è –ë–æ—Ç {name} –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
                    
                    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
                    new_process = subprocess.Popen(
                        [sys.executable, script_file],
                        creationflags=subprocess.CREATE_NEW_CONSOLE if os.name == 'nt' else 0
                    )
                    processes[i] = (new_process, name, script_file)
                    
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –±–æ—Ç–æ–≤...")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        for process, name, script_file in processes:
            try:
                process.terminate()
                print(f"‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {name}")
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                if os.path.exists(script_file):
                    os.remove(script_file)
            except:
                pass
        
        print("\nüëã –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –≤—Å–µ –≤ –æ–¥–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–æ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
async def run_all_bots_async():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤ –æ–¥–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    config = load_bots_config()
    bots = config['bots']
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ...")
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
    tasks = []
    
    for i, bot_config in enumerate(bots):
        task = asyncio.create_task(run_single_bot(i, bot_config))
        tasks.append(task)
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
        await asyncio.sleep(3)
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á
    await asyncio.gather(*tasks)

async def run_single_bot(index, bot_config):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–¥–Ω–æ–≥–æ –±–æ—Ç–∞"""
    from telethon import TelegramClient
    
    print(f"\nü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ #{index+1}: {bot_config['name']}")
    
    client = TelegramClient(
        bot_config['session_file'],
        bot_config['api_id'],
        bot_config['api_hash'],
        proxy=tuple(bot_config['proxy']) if bot_config.get('proxy') else None
    )
    
    try:
        await client.connect()
        
        if not await client.is_user_authorized():
            print(f"‚ùå –ë–æ—Ç {bot_config['name']} –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            return
        
        me = await client.get_me()
        print(f"‚úÖ –ë–æ—Ç {me.first_name} –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ main.py
        from main import process_new_posts
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
        while True:
            try:
                # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–æ—Ç–∞
                history_file = f"history_{bot_config['phone'].replace('+', '')}.json"
                reactions_file = f"reactions_{bot_config['phone'].replace('+', '')}.json"
                
                await process_new_posts(
                    client,
                    "@chinapack",
                    "@chipack_chat",
                    history_file=history_file,
                    reactions_file=reactions_file
                )
                
                # –°–ª—É—á–∞–π–Ω–∞—è –ø–∞—É–∑–∞ 5-15 –º–∏–Ω—É—Ç
                pause = random.randint(300, 900)
                print(f"üí§ –ë–æ—Ç {bot_config['name']} –æ—Ç–¥—ã—Ö–∞–µ—Ç {pause//60} –º–∏–Ω—É—Ç")
                await asyncio.sleep(pause)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞ {bot_config['name']}: {e}")
                await asyncio.sleep(60)
                
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞ {bot_config['name']}: {e}")
    finally:
        await client.disconnect()

if __name__ == "__main__":
    print("\nü§ñ –†–ï–ñ–ò–ú–´ –ó–ê–ü–£–°–ö–ê –ë–û–¢–û–í:")
    print("1. –í –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤ –æ–¥–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ")
    print("3. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è (–ø–æ –æ—á–µ—Ä–µ–¥–∏)")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-3): ")
    
    if choice == "1":
        asyncio.run(run_all_bots_simultaneously())
    elif choice == "2":
        asyncio.run(run_all_bots_async())
    elif choice == "3":
        print("\n–î–ª—è —Ä–æ—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python run_multi_bot.py")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")